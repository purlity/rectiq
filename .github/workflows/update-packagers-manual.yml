name: Update Packagers (manual)

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Release tag (e.g., rectiq-cli-v0.1.0)"
        required: true
        type: string

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Resolve version
        id: v
        run: |
          TAG="${{ github.event.inputs.tag }}"
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          V="${TAG#rectiq-cli-v}"
          echo "version=$V" >> $GITHUB_OUTPUT

      - name: Download release assets list
        uses: actions/github-script@v7
        id: assets
        with:
          script: |
            const { owner, repo } = context.repo;
            const tag = '${{ steps.v.outputs.tag }}';
            const rel = await github.rest.repos.getReleaseByTag({ owner, repo, tag });
            return { assets: rel.data.assets.map(a => ({name: a.name, url: a.browser_download_url})) };
      - name: Compute SHAs
        id: shas
        run: |
          sudo apt-get update >/dev/null 2>&1 || true
          sudo apt-get install -y jq >/dev/null 2>&1 || true
          mkdir dist
          echo "${{ steps.assets.outputs.assets }}" > assets.json
          cat assets.json | jq -r '.assets[].url' | while read url; do
            name=$(basename "$url")
            curl -fsSL "$url" -o "dist/$name"
          done
          for f in dist/*.tar.xz dist/*.zip; do
            [ -f "$f" ] || continue
            sha256sum "$f" >> dist/SHA256SUMS.txt
          done
          cat dist/SHA256SUMS.txt
      - name: Update Homebrew tap
        env: { GH_TOKEN: ${{ secrets.GH_PAT_PUSH }} }
        run: |
          V="${{ steps.v.outputs.version }}"
          git clone https://github.com/purlity/homebrew-tap tap
          git -C tap remote set-url origin "https://x-access-token:${GH_TOKEN}@github.com/purlity/homebrew-tap"
          cd tap/Formula
          sed -i "s/version \".*\"/version \"${V}\"/" rectiq.rb
          MAC_ARM=$(grep aarch64-apple-darwin ../../dist/SHA256SUMS.txt | awk '{print $1}')
          MAC_X64=$(grep x86_64-apple-darwin ../../dist/SHA256SUMS.txt | awk '{print $1}')
          LNX_ARM=$(grep aarch64-unknown-linux-musl ../../dist/SHA256SUMS.txt | awk '{print $1}')
          LNX_X64=$(grep x86_64-unknown-linux-musl ../../dist/SHA256SUMS.txt | awk '{print $1}')
          sed -i "s/__SHA256_MAC_ARM64__/${MAC_ARM}/" rectiq.rb
          sed -i "s/__SHA256_MAC_X64__/${MAC_X64}/" rectiq.rb
          sed -i "s/__SHA256_LINUX_ARM64__/${LNX_ARM}/" rectiq.rb
          sed -i "s/__SHA256_LINUX_X64__/${LNX_X64}/" rectiq.rb
          git config user.name "rectiq-bot"
          git config user.email "bot@purlity.org"
          git commit -am "rectiq ${V} (manual)" || echo "No changes"
          git push

      - name: Update Scoop bucket
        env: { GH_TOKEN: ${{ secrets.GH_PAT_PUSH }} }
        run: |
          V="${{ steps.v.outputs.version }}"
          cd "$GITHUB_WORKSPACE"
          git clone https://github.com/purlity/scoop-bucket bucket
          git -C bucket remote set-url origin "https://x-access-token:${GH_TOKEN}@github.com/purlity/scoop-bucket"
          cd bucket
          sed -i "s/\"version\": \".*\"/\"version\": \"${V}\"/" rectiq.json
          WIN_X64=$(grep x86_64-pc-windows-msvc.zip ../dist/SHA256SUMS.txt | awk '{print $1}')
          WIN_ARM=$(grep aarch64-pc-windows-msvc.zip ../dist/SHA256SUMS.txt | awk '{print $1}')
          sed -i "s/__SHA256_WIN_X64__/${WIN_X64}/" rectiq.json
          sed -i "s/__SHA256_WIN_ARM64__/${WIN_ARM}/" rectiq.json
          git config user.name "rectiq-bot"
          git config user.email "bot@purlity.org"
          git commit -am "rectiq ${V} (manual)" || echo "No changes"
          git push

